<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>megamek</groupId>
        <artifactId>megamek-parent</artifactId>
        <version>0.41.18-SNAPSHOT</version>
    </parent>
    
    <artifactId>megamek</artifactId>
    <packaging>jar</packaging>

    <name>MegaMek</name>

    <dependencies>
        <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>1.4.7</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
            <type>jar</type>
        </dependency>
    </dependencies>

    <build>
        <finalName>MegaMek</finalName>
        
        <sourceDirectory>src</sourceDirectory>
        <testSourceDirectory>unittests</testSourceDirectory>

        <resources>
            <resource>
                <directory>src</directory>
                <includes>
                    <include>**/*.properties</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>i18n</directory>
            </resource>
        </resources>
        
        <testResources>
            <testResource>
                <directory>unittests</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
                <filtering>false</filtering>
            </testResource>
        </testResources>
        
        <plugins>
            <plugin>
                <!-- Copy the library dependencies to target/lib -->
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <configuration>
                    <includeScope>runtime</includeScope>
                    <overWriteIfNewer>true</overWriteIfNewer>
                    <overWriteReleases>false</overWriteReleases>
                    <overWriteSnapshots>false</overWriteSnapshots>
                </configuration>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-Mac-dependencies</id>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/${project.build.finalName}.app/Contents/Resources/Java/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- copy the data, mmconf, docs directories and the startup.sh script to target-->
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <executions>
                    <execution>
                        <id>copy-data</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/data</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>data</directory>
                                    <excludes>
                                        <exclude>**/*.psd</exclude>
                                        <exclude>mechfiles/battlearmor/**</exclude>
                                        <exclude>mechfiles/convfighter/**</exclude>
                                        <exclude>mechfiles/dropships/**</exclude>
                                        <exclude>mechfiles/fighters/**</exclude>
                                        <exclude>mechfiles/ge/**</exclude>
                                        <exclude>mechfiles/infantry/**</exclude>
                                        <exclude>mechfiles/jumpships/**</exclude>
                                        <exclude>mechfiles/mechs/**</exclude>
                                        <exclude>mechfiles/protomechs/**</exclude>
                                        <exclude>mechfiles/smallcraft/**</exclude>
                                        <exclude>mechfiles/spacestation/**</exclude>
                                        <exclude>mechfiles/unofficial/**</exclude>
                                        <exclude>mechfiles/vehicles/**</exclude>
                                        <exclude>mechfiles/warship/**</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-mmconf</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/mmconf</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>mmconf</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-docs</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/docs</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>docs</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-mac-data</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/${project.build.finalName}.app</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>packaging_utils/${project.build.finalName}.app</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-JavaApplicationStub</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/${project.build.finalName}.app/Contents/MacOS</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>packaging_utils</directory>
                                    <includes>
                                        <include>JavaApplicationStub</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-startup</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}</directory>
                                    <includes>
                                        <include>startup.sh</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Create the executable MegaMek.jar file -->
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>megamek.MegaMek</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <configuration>
                    <failOnError>true</failOnError>
                </configuration>
                <executions>
                    <execution>
                        <id>create-logs-directory</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <mkdir dir="${project.build.directory}/logs" />
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unit-file-zip</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target name="unitfiles-zip" description="Create a zipfile of the Mech datafiles">
                                <zip zipfile="${project.build.directory}/data/mechfiles/battlearmor.zip" basedir="${basedir}/data/mechfiles/battlearmor"/>
                                <zip zipfile="${project.build.directory}/data/mechfiles/convfighter.zip" basedir="${basedir}/data/mechfiles/convfighter"/>
                                <zip zipfile="${project.build.directory}/data/mechfiles/dropships.zip" basedir="${basedir}/data/mechfiles/dropships"/>
                                <zip zipfile="${project.build.directory}/data/mechfiles/fighters.zip" basedir="${basedir}/data/mechfiles/fighters"/>
                                <zip zipfile="${project.build.directory}/data/mechfiles/ge.zip" basedir="${basedir}/data/mechfiles/ge"/>
                                <zip zipfile="${project.build.directory}/data/mechfiles/infantry.zip" basedir="${basedir}/data/mechfiles/infantry"/>
                                <zip zipfile="${project.build.directory}/data/mechfiles/jumpships.zip" basedir="${basedir}/data/mechfiles/jumpships"/>
                                <zip zipfile="${project.build.directory}/data/mechfiles/mechs.zip" basedir="${basedir}/data/mechfiles/mechs"/>
                                <zip zipfile="${project.build.directory}/data/mechfiles/protomechs.zip" basedir="${basedir}/data/mechfiles/protomechs"/>
                                <zip zipfile="${project.build.directory}/data/mechfiles/smallcraft.zip" basedir="${basedir}/data/mechfiles/smallcraft"/>
                                <zip zipfile="${project.build.directory}/data/mechfiles/spacestation.zip" basedir="${basedir}/data/mechfiles/spacestation"/>
                                <zip zipfile="${project.build.directory}/data/mechfiles/unofficial.zip" basedir="${basedir}/data/mechfiles/unofficial"/>
                                <zip zipfile="${project.build.directory}/data/mechfiles/vehicles.zip" basedir="${basedir}/data/mechfiles/vehicles"/>
                                <zip zipfile="${project.build.directory}/data/mechfiles/warship.zip" basedir="${basedir}/data/mechfiles/warship"/>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- Fix the permissions on the startup.sh script, due to the resources plugin breaking it -->
                        <id>make-startup-script-executable</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <chmod file="${project.build.directory}/startup.sh" perm="775" />
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-equipment-list</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <java jar="${project.build.directory}/${project.build.finalName}.${project.packaging}" fork="true">
                                    <arg line="-eqdb ${project.build.directory}/docs/equipment.txt" />
                                </java>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-official-unit-list</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <java jar="${project.build.directory}/${project.build.finalName}.${project.packaging}" fork="true">
                                    <arg line="-oul" />
                                </java>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-jar-for-mac</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <copy file="${project.build.directory}/${project.build.finalName}.${project.packaging}" toFile="${project.build.directory}/${project.build.finalName}.app/Contents/Resources/Java/${project.build.finalName}.${project.packaging}" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.akathist.maven.plugins.launch4j</groupId>
                <artifactId>launch4j-maven-plugin</artifactId>
                <version>1.7.8</version>
                <executions>
                    <execution>
                        <id>exe</id>
                        <phase>package</phase>
                        <goals>
                            <goal>launch4j</goal>
                        </goals>
                        <configuration>
                            <headerType>gui</headerType>
                            <jar>${project.build.directory}/${project.build.finalName}.${project.packaging}</jar>
                            <outfile>${project.build.directory}/${project.build.finalName}.exe</outfile>
                            <errTitle></errTitle>
                            <cmdLine></cmdLine>
                            <chdir>.</chdir>
                            <priority>normal</priority>
                            <downloadUrl>http://java.com/download</downloadUrl>
                            <supportUrl>http://megamek.sourceforge.net/forums</supportUrl>
                            <customProcName>true</customProcName>
                            <stayAlive>false</stayAlive>
                            <icon>${basedir}/data/images/misc/megamek.ico</icon>
                            <jre>
                                <minVersion>1.7.0</minVersion>
                                <jdkPreference>preferJre</jdkPreference>
                                <maxHeapSize>1024</maxHeapSize>
                            </jre>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Make the distribution files -->
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <finalName>${project.groupId}-v${project.version}</finalName>
                    <tarLongFileMode>gnu</tarLongFileMode>
                    <descriptors>
                        <descriptor>src/assembly/nix.xml</descriptor>
                        <descriptor>src/assembly/mac.xml</descriptor>
                        <descriptor>src/assembly/win.xml</descriptor>
                    </descriptors>
                    <attach>false</attach>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>install</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
